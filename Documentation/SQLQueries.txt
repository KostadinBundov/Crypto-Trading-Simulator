--- SQL Query Documentation ---

Repository: AccountRepository.java

Method: save
SQL: INSERT INTO accounts (first_name, last_name, email, phone_number, balance) VALUES (?, ?, ?, ?, ?);
Parameters: account.getFirstName(), account.getLastName(), account.getEmail(), account.getPhoneNumber(), account.getBalance()
Returns: Account

Method: selectAll
SQL: SELECT * FROM accounts;
Parameters: None
Returns: List<Account>

Method: update
SQL: UPDATE accounts SET first_name = ?, last_name = ?, email = ?, phone_number = ?, balance = ? WHERE id = ?;
Parameters: account.getFirstName(), account.getLastName(), account.getEmail(), account.getPhoneNumber(), account.getBalance(), account.getId()
Returns: void

Method: findByEmail
SQL: SELECT * FROM accounts WHERE email = ?;
Parameters: email
Returns: Optional<Account>

Method: findById
SQL: SELECT * FROM accounts WHERE id = ?;
Parameters: id
Returns: Optional<Account>

Method: deleteById
SQL: DELETE FROM accounts WHERE id = ?;
Parameters: id
Returns: void

Method: getAccountId
SQL: SELECT id FROM accounts WHERE email = ?;
Parameters: email
Returns: Long

---

Repository: CryptoCurrencyRepository.java

Method: selectAll
SQL: SELECT * FROM crypto_currencies ORDER BY symbol;
Parameters: None
Returns: List<CryptoCurrency>

Method: findBySymbol
SQL: SELECT * FROM crypto_currencies WHERE symbol = ?;
Parameters: symbol
Returns: Optional<CryptoCurrency>

---

Repository: HoldingRepository.java

Method: save
SQL: INSERT INTO holdings (wallet_id, crypto_currency_symbol, crypto_currency_amount) VALUES (?, ?, ?);
Parameters: holding.getWalletId(), holding.getCryptoCurrencySymbol(), holding.getCryptoCurrencyAmount()
Returns: Holding

Method: selectAll
SQL: SELECT * FROM holdings;
Parameters: None
Returns: List<Holding>

Method: updateAmount
SQL: UPDATE holdings SET crypto_currency_amount = ? WHERE id = ?;
Parameters: holding.getCryptoCurrencyAmount(), holding.getId()
Returns: void

Method: findByWalletId
SQL: SELECT * FROM holdings WHERE wallet_id = ?;
Parameters: walletId
Returns: List<Holding>

Method: findById
SQL: SELECT * FROM holdings WHERE id = ?;
Parameters: id
Returns: Optional<Holding>

Method: deleteById
SQL: DELETE FROM holdings WHERE id = ?;
Parameters: id
Returns: void

Method: findByWalletIdAndSymbol
SQL: SELECT * FROM holdings WHERE wallet_id = ? AND crypto_currency_symbol = ?;
Parameters: walletId, symbol
Returns: Optional<Holding>

Method: deleteByWalletId
SQL: DELETE FROM holdings WHERE wallet_id = ?;
Parameters: walletId
Returns: void

---

Repository: TransactionRepository.java

Method: save
SQL: INSERT INTO transactions(account_id, currency_symbol, amount, price, profit, date) VALUES (?, ?, ?, ?, ?, ?);
Parameters: transaction.getAccountId(), transaction.getCurrencySymbol(), transaction.getAmount(), transaction.getPrice(), transaction.getProfit(), transaction.getDate()
Returns: Transaction

Method: selectAll
SQL: SELECT * FROM transactions;
Parameters: None
Returns: List<Transaction>

Method: findByAccountId
SQL: SELECT * FROM transactions WHERE account_id = ?;
Parameters: accountId
Returns: List<Transaction>

Method: findById
SQL: SELECT * FROM transactions WHERE id = ?;
Parameters: id
Returns: Optional<Transaction>

Method: deleteById
SQL: DELETE FROM transactions WHERE id = ?;
Parameters: id
Returns: void

Method: deleteByAccountId
SQL: DELETE FROM transactions WHERE account_id = ?;
Parameters: accountId
Returns: void

---

Repository: WalletRepository.java

Method: save
SQL: INSERT INTO wallets (account_id) VALUES (?);
Parameters: wallet.getAccountId()
Returns: Wallet

Method: selectAll
SQL: SELECT * FROM wallets;
Parameters: None
Returns: List<Wallet>

Method: findByAccountId
SQL: SELECT * FROM wallets WHERE account_id = ?;
Parameters: accountId
Returns: Optional<Wallet>

Method: findById
SQL: SELECT * FROM wallets WHERE id = ?;
Parameters: id
Returns: Optional<Wallet>

Method: deleteById
SQL: DELETE FROM wallets WHERE id = ?;
Parameters: id
Returns: void

Method: deleteByAccountId
SQL: DELETE FROM wallets WHERE account_id = ?;
Parameters: accountId
Returns: void

Method: getWalletId
SQL: SELECT id FROM wallets WHERE account_id = ?;
Parameters: accountId
Returns: Long